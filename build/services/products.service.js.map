{"version":3,"sources":["../../src/services/products.service.js"],"names":["doc","GoogleSpreadsheet","appConfig","process","env","NODE_ENV","googleSheetId","create","newProduct","database","Product","list","limit","offset","findAndCountAll","parseFromDocs","Promise","resolve","reject","getInfo","error","info","sheet","worksheets","find","item","title","getRows","rows","destroy","where","createdProducts","productRow","Category","findOne","category","price","description","CategoryId","id","undefined","DkId","dk","console","log","push"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,GAAG,GAAG,IAAIC,6BAAJ,CAAsBC,gBAAUC,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,aAAlC,EAAiDC,aAAvE,CAAZ;;SAEsBC,M;;;;;;;+BAAf,iBAAsBC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEUC,mBAASC,OAAT,CAAiBH,MAAjB,CAAwBC,UAAxB,CAFV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAQeG,I;;;;;;;+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBC,YAAAA,KAAtB,QAAsBA,KAAtB,EAA6BC,MAA7B,QAA6BA,MAA7B;AAAA;AAAA;AAAA,mBAEUJ,mBAASC,OAAT,CAAiBI,eAAjB,CAAiC;AAAED,cAAAA,MAAM,EAANA,MAAF;AAAUD,cAAAA,KAAK,EAALA;AAAV,aAAjC,CAFV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAQeG,a;;;;;;;+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA,8CACE,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtClB,cAAAA,GAAG,CAACmB,OAAJ,CAAY,UAASC,KAAT,EAAgBC,IAAhB,EAAsB;AAChC,oBAAID,KAAJ,EAAW,OAAOF,MAAM,CAACE,KAAD,CAAb;AACX,oBAAME,KAAK,GAAGD,IAAI,CAACE,UAAL,CAAgBC,IAAhB,CAAqB,UAAAC,IAAI;AAAA,yBAAIA,IAAI,CAACC,KAAL,KAAe,UAAnB;AAAA,iBAAzB,CAAd;AAEAJ,gBAAAA,KAAK,CAACK,OAAN,CAAc,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAkB,kBAAOP,KAAP,EAAcQ,IAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChB,gCAAIR,KAAJ,EAAWF,MAAM,CAACE,KAAD,CAAN;AADK;AAAA,mCAGVX,mBAASC,OAAT,CAAiBmB,OAAjB,CAAyB;AAAEC,8BAAAA,KAAK,EAAE;AAAT,6BAAzB,CAHU;;AAAA;AAIVC,4BAAAA,eAJU,GAIQ,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAMWH,IANX;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMHI,4BAAAA,UANG;AAAA;AAAA,mCAOWvB,mBAASwB,QAAT,CAAkBC,OAAlB,CAA0B;AAC/CJ,8BAAAA,KAAK,EAAE;AAAEJ,gCAAAA,KAAK,EAAEM,UAAU,CAAC,UAAD;AAAnB;AADwC,6BAA1B,CAPX;;AAAA;AAONG,4BAAAA,QAPM;AAWN3B,4BAAAA,UAXM,GAWO;AACjBkB,8BAAAA,KAAK,EAAEM,UAAU,CAACN,KADD;AAEjBU,8BAAAA,KAAK,EAAE,CAACJ,UAAU,CAACI,KAFF;AAGjBC,8BAAAA,WAAW,EAAEL,UAAU,CAACK,WAHP;AAIjBC,8BAAAA,UAAU,EAAEH,QAAQ,GAAGA,QAAQ,CAACI,EAAZ,GAAiBC,SAJpB;AAKjBC,8BAAAA,IAAI,EAAET,UAAU,CAACU;AALA,6BAXP;AAmBZC,4BAAAA,OAAO,CAACC,GAAR,CAAYnC,mBAASC,OAArB;AAnBY,2CAqBZqB,eArBY;AAAA;AAAA,mCAqBetB,mBAASC,OAAT,CAAiBH,MAAjB,CAAwBC,UAAxB,CArBf;;AAAA;AAAA;;AAAA,yCAqBIqC,IArBJ;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAuBd5B,4BAAAA,OAAO,CAACc,eAAD,CAAP;AAvBc;AAAA;;AAAA;AAAA;AAAA;AAyBdb,4BAAAA,MAAM,cAAN;;AAzBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAlB;;AAAA;AAAA;AAAA;AAAA;AA4BD,eAhCD;AAiCD,aAlCM,CADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import GoogleSpreadsheet from \"google-spreadsheet\";\nimport database from \"../models\";\nimport appConfig from \"../../config/app\";\n\nconst doc = new GoogleSpreadsheet(appConfig[process.env.NODE_ENV || \"development\"].googleSheetId);\n\nexport async function create(newProduct) {\n  try {\n    return await database.Product.create(newProduct);\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function list({ limit, offset }) {\n  try {\n    return await database.Product.findAndCountAll({ offset, limit });\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function parseFromDocs() {\n  return new Promise((resolve, reject) => {\n    doc.getInfo(function(error, info) {\n      if (error) return reject(error);\n      const sheet = info.worksheets.find(item => item.title === \"Products\");\n\n      sheet.getRows({}, async (error, rows) => {\n        if (error) reject(error);\n\n        await database.Product.destroy({ where: {} });\n        const createdProducts = [];\n        try {\n          for (const productRow of rows) {\n            const category = await database.Category.findOne({\n              where: { title: productRow[\"category\"] }\n            });\n\n            const newProduct = {\n              title: productRow.title,\n              price: +productRow.price,\n              description: productRow.description,\n              CategoryId: category ? category.id : undefined,\n              DkId: productRow.dk\n            };\n\n            console.log(database.Product);\n\n            createdProducts.push(await database.Product.create(newProduct));\n          }\n          resolve(createdProducts);\n        } catch (error) {\n          reject(error);\n        }\n      });\n    });\n  });\n}\n"],"file":"products.service.js"}
{"version":3,"sources":["../../src/controllers/purchases.controller.js"],"names":["responseUtils","ResponseUtils","purchasesList","req","res","body","limit","offset","PurchasesService","list","setSuccess","send","setError","message","createPurchase","newPurchase","console","log","products","length","create","createdPurchase"],"mappings":";;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,aAAa,GAAG,IAAIC,oBAAJ,EAAtB;;SAEsBC,a;;;;;;;+BAAf,iBAA6BC,GAA7B,EAAkCC,GAAlC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEuBD,GAAG,CAACE,IAF3B,EAEKC,KAFL,aAEKA,KAFL,EAEYC,MAFZ,aAEYA,MAFZ;AAAA,0BAGIP,aAHJ;AAAA;AAAA,mBAGwCQ,gBAAgB,CAACC,IAAjB,CAAsB;AAAEH,cAAAA,KAAK,EAALA,KAAF;AAASC,cAAAA,MAAM,EAANA;AAAT,aAAtB,CAHxC;;AAAA;AAAA;AAAA,0BAGuFH,GAHvF;AAAA,yDAGkBM,UAHlB,mBAG6B,GAH7B,eAGkFC,IAHlF;;AAAA;AAAA;AAAA;AAAA,6CAKIX,aAAa,CAACY,QAAd,CAAuB,GAAvB,EAA4B,YAAMC,OAAlC,EAA2CF,IAA3C,CAAgDP,GAAhD,CALJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SASeU,c;;;;;;;+BAAf,kBAA8BX,GAA9B,EAAmCC,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AACDW,YAAAA,WADC,GACaZ,GAAG,CAACE,IADjB;AAGLW,YAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,WAAW,CAACG,QAAb,IAAyB,CAACH,WAAW,CAACG,QAAZ,CAAqBC,MAA3D;;AAHK,kBAKD,CAACJ,WAAW,CAACG,QAAb,IAAyB,CAACH,WAAW,CAACG,QAAZ,CAAqBC,MAL9C;AAAA;AAAA;AAAA;;AAAA,8CAMInB,aAAa,CAACY,QAAd,CAAuB,GAAvB,EAA4B,gCAA5B,EAA8DD,IAA9D,CAAmEP,GAAnE,CANJ;;AAAA;AAAA;AAAA;AAAA,mBAU2BI,gBAAgB,CAACY,MAAjB,CAAwBL,WAAxB,CAV3B;;AAAA;AAUGM,YAAAA,eAVH;AAAA,8CAYIrB,aAAa,CAACU,UAAd,CAAyB,GAAzB,EAA8BW,eAA9B,EAA+C,kBAA/C,EAAmEV,IAAnE,CAAwEP,GAAxE,CAZJ;;AAAA;AAAA;AAAA;AAAA,8CAcIJ,aAAa,CAACY,QAAd,CAAuB,GAAvB,EAA4B,aAAMC,OAAlC,EAA2CF,IAA3C,CAAgDP,GAAhD,CAdJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import * as PurchasesService from \"../services/purchases.service\";\nimport ResponseUtils from \"../utils/response.utils\";\n\nconst responseUtils = new ResponseUtils();\n\nexport async function purchasesList(req, res) {\n  try {\n    const { limit, offset } = req.body;\n    return responseUtils.setSuccess(201, await PurchasesService.list({ limit, offset })).send(res);\n  } catch (error) {\n    return responseUtils.setError(400, error.message).send(res);\n  }\n}\n\nexport async function createPurchase(req, res) {\n  let newPurchase = req.body;\n\n  console.log(!newPurchase.products || !newPurchase.products.length);\n\n  if (!newPurchase.products || !newPurchase.products.length) {\n    return responseUtils.setError(400, \"Purchase can not have products\").send(res);\n  }\n\n  try {\n    const createdPurchase = await PurchasesService.create(newPurchase);\n\n    return responseUtils.setSuccess(201, createdPurchase, \"Purchase created\").send(res);\n  } catch (error) {\n    return responseUtils.setError(400, error.message).send(res);\n  }\n}\n"],"file":"purchases.controller.js"}
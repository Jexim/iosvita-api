{"version":3,"sources":["../../src/controllers/products.controller.js"],"names":["responseUtils","ResponseUtils","productsList","req","res","body","limit","offset","ProductsService","list","setSuccess","send","setError","message","createProduct","newProduct","title","price","create","createdProduct"],"mappings":";;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,aAAa,GAAG,IAAIC,oBAAJ,EAAtB;;SAEsBC,Y;;;;;;;+BAAf,iBAA4BC,GAA5B,EAAiCC,GAAjC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEuBD,GAAG,CAACE,IAF3B,EAEKC,KAFL,aAEKA,KAFL,EAEYC,MAFZ,aAEYA,MAFZ;AAAA,0BAGIP,aAHJ;AAAA;AAAA,mBAGwCQ,eAAe,CAACC,IAAhB,CAAqB;AAAEH,cAAAA,KAAK,EAALA,KAAF;AAASC,cAAAA,MAAM,EAANA;AAAT,aAArB,CAHxC;;AAAA;AAAA;AAAA,0BAGsFH,GAHtF;AAAA,yDAGkBM,UAHlB,mBAG6B,GAH7B,eAGiFC,IAHjF;;AAAA;AAAA;AAAA;AAAA,6CAKIX,aAAa,CAACY,QAAd,CAAuB,GAAvB,EAA4B,YAAMC,OAAlC,EAA2CF,IAA3C,CAAgDP,GAAhD,CALJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SASeU,a;;;;;;;+BAAf,kBAA6BX,GAA7B,EAAkCC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCW,YAAAA,UADD,GACcZ,GAAG,CAACE,IADlB;;AAAA,gBAGAU,UAAU,CAACC,KAHX;AAAA;AAAA;AAAA;;AAAA,8CAIIhB,aAAa,CAACY,QAAd,CAAuB,GAAvB,EAA4B,wBAA5B,EAAsDD,IAAtD,CAA2DP,GAA3D,CAJJ;;AAAA;AAAA,gBAOAW,UAAU,CAACE,KAPX;AAAA;AAAA;AAAA;;AAAA,8CAQIjB,aAAa,CAACY,QAAd,CAAuB,GAAvB,EAA4B,wBAA5B,EAAsDD,IAAtD,CAA2DP,GAA3D,CARJ;;AAAA;AAAA;AAAA;AAAA,mBAY0BI,eAAe,CAACU,MAAhB,CAAuBH,UAAvB,CAZ1B;;AAAA;AAYGI,YAAAA,cAZH;AAAA,8CAcInB,aAAa,CAACU,UAAd,CAAyB,GAAzB,EAA8BS,cAA9B,EAA8C,iBAA9C,EAAiER,IAAjE,CAAsEP,GAAtE,CAdJ;;AAAA;AAAA;AAAA;AAAA,8CAgBIJ,aAAa,CAACY,QAAd,CAAuB,GAAvB,EAA4B,aAAMC,OAAlC,EAA2CF,IAA3C,CAAgDP,GAAhD,CAhBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import * as ProductsService from \"../services/products.service\";\nimport ResponseUtils from \"../utils/response.utils\";\n\nconst responseUtils = new ResponseUtils();\n\nexport async function productsList(req, res) {\n  try {\n    const { limit, offset } = req.body;\n    return responseUtils.setSuccess(201, await ProductsService.list({ limit, offset })).send(res);\n  } catch (error) {\n    return responseUtils.setError(400, error.message).send(res);\n  }\n}\n\nexport async function createProduct(req, res) {\n  const newProduct = req.body;\n\n  if (!newProduct.title) {\n    return responseUtils.setError(400, \"Title can not be empty\").send(res);\n  }\n\n  if (!newProduct.price) {\n    return responseUtils.setError(400, \"Price can not be empty\").send(res);\n  }\n\n  try {\n    const createdProduct = await ProductsService.create(newProduct);\n\n    return responseUtils.setSuccess(201, createdProduct, \"Product created\").send(res);\n  } catch (error) {\n    return responseUtils.setError(400, error.message).send(res);\n  }\n}"],"file":"products.controller.js"}
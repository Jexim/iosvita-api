{"version":3,"sources":["../../src/controllers/parsers.controller.js"],"names":["responseUtils","ResponseUtils","parseProductsFromDocs","req","res","ProductsService","parseFromDocs","parsedProducts","setSuccess","send","setError","message","parseDksFromDocs","DksService","parsedDks","parseCategoriesFromDocs","CategoriesService","parsedCategories"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,IAAMA,aAAa,GAAG,IAAIC,oBAAJ,EAAtB;;SAEsBC,qB;;;;;;;+BAAf,iBAAqCC,GAArC,EAA0CC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE0BC,eAAe,CAACC,aAAhB,EAF1B;;AAAA;AAEGC,YAAAA,cAFH;AAAA,6CAIIP,aAAa,CAACQ,UAAd,CAAyB,GAAzB,EAA8BD,cAA9B,EAA8C,gBAA9C,EAAgEE,IAAhE,CAAqEL,GAArE,CAJJ;;AAAA;AAAA;AAAA;AAAA,6CAMIJ,aAAa,CAACU,QAAd,CAAuB,GAAvB,EAA4B,YAAMC,OAAlC,EAA2CF,IAA3C,CAAgDL,GAAhD,CANJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAUeQ,gB;;;;;;;+BAAf,kBAAgCT,GAAhC,EAAqCC,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEqBS,UAAU,CAACP,aAAX,EAFrB;;AAAA;AAEGQ,YAAAA,SAFH;AAAA,8CAIId,aAAa,CAACQ,UAAd,CAAyB,GAAzB,EAA8BM,SAA9B,EAAyC,aAAzC,EAAwDL,IAAxD,CAA6DL,GAA7D,CAJJ;;AAAA;AAAA;AAAA;AAAA,8CAMIJ,aAAa,CAACU,QAAd,CAAuB,GAAvB,EAA4B,aAAMC,OAAlC,EAA2CF,IAA3C,CAAgDL,GAAhD,CANJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAUeW,uB;;;;;;;+BAAf,kBAAuCZ,GAAvC,EAA4CC,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE4BY,iBAAiB,CAACV,aAAlB,EAF5B;;AAAA;AAEGW,YAAAA,gBAFH;AAAA,8CAIIjB,aAAa,CAACQ,UAAd,CAAyB,GAAzB,EAA8BS,gBAA9B,EAAgD,mBAAhD,EAAqER,IAArE,CAA0EL,GAA1E,CAJJ;;AAAA;AAAA;AAAA;AAAA,8CAMIJ,aAAa,CAACU,QAAd,CAAuB,GAAvB,EAA4B,aAAMC,OAAlC,EAA2CF,IAA3C,CAAgDL,GAAhD,CANJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import * as ProductsService from \"../services/products.service\";\nimport * as DksService from \"../services/dks.service\";\nimport * as CategoriesService from \"../services/categories.service\";\nimport ResponseUtils from \"../utils/response.utils\";\n\nconst responseUtils = new ResponseUtils();\n\nexport async function parseProductsFromDocs(req, res) {\n  try {\n    const parsedProducts = await ProductsService.parseFromDocs();\n\n    return responseUtils.setSuccess(200, parsedProducts, \"Product parsed\").send(res);\n  } catch (error) {\n    return responseUtils.setError(400, error.message).send(res);\n  }\n}\n\nexport async function parseDksFromDocs(req, res) {\n  try {\n    const parsedDks = await DksService.parseFromDocs();\n\n    return responseUtils.setSuccess(200, parsedDks, \"DK's parsed\").send(res);\n  } catch (error) {\n    return responseUtils.setError(400, error.message).send(res);\n  }\n}\n\nexport async function parseCategoriesFromDocs(req, res) {\n  try {\n    const parsedCategories = await CategoriesService.parseFromDocs();\n\n    return responseUtils.setSuccess(200, parsedCategories, \"Categories parsed\").send(res);\n  } catch (error) {\n    return responseUtils.setError(400, error.message).send(res);\n  }\n}\n"],"file":"parsers.controller.js"}
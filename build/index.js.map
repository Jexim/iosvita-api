{"version":3,"sources":["../src/index.js"],"names":["app","use","bodyParser","json","urlencoded","extended","port","process","env","PORT","usersRoutes","productsRoutes","categoriesRoutes","dksRoutes","parsersRoutes","purchasesRoutes","get","req","res","status","send","message","database","sequelize","sync","then","listen","console","log","error"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,uBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEAT,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkBS,iBAAlB;AACAV,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBU,oBAArB;AACAX,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuBW,sBAAvB;AACAZ,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBY,eAAhB;AACAb,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBa,mBAApB;AACAd,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBc,qBAAtB;AAEAf,GAAG,CAACgB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAArB,CAAd;AAAA,CAAb;;AACAC,mBAASC,SAAT,CACGC,IADH,GAEGC,IAFH,CAEQ;AAAA,SAAMzB,GAAG,CAAC0B,MAAJ,CAAWpB,IAAX,EAAiB;AAAA,WAAMqB,OAAO,CAACC,GAAR,qCAAyCtB,IAAzC,EAAN;AAAA,GAAjB,CAAN;AAAA,CAFR,WAGS,UAAAuB,KAAK,EAAI;AACd,QAAMA,KAAN;AACD,CALH;;eAOe7B,G","sourcesContent":["import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport database from \"./models\";\nimport usersRoutes from \"./routes/users.routes\";\nimport productsRoutes from \"./routes/products.routes\";\nimport categoriesRoutes from \"./routes/categories.routes\";\nimport parsersRoutes from \"./routes/parsers.routes\";\nimport dksRoutes from \"./routes/dks.routes\";\nimport purchasesRoutes from \"./routes/purchases.routes\";\n\nconst app = express();\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\nconst port = process.env.PORT || 8000;\n\napp.use(\"/users\", usersRoutes);\napp.use(\"/products\", productsRoutes);\napp.use(\"/categories\", categoriesRoutes);\napp.use(\"/dks\", dksRoutes);\napp.use(\"/parsers\", parsersRoutes);\napp.use(\"/purchases\", purchasesRoutes);\n\napp.get(\"*\", (req, res) => res.status(200).send({ message: \"Welcome to this API.\" }));\ndatabase.sequelize\n  .sync()\n  .then(() => app.listen(port, () => console.log(`Server is running on PORT ${port}`)))\n  .catch(error => {\n    throw error;\n  });\n\nexport default app;\n"],"file":"index.js"}